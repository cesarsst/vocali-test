import{M as i,q as c,a0 as u}from"./D6MxqhPJ.js";function a(o){return i().public[o]}async function g(o,t){const e=a("NUXT_LAMBDA_FUNCTION_UPLOAD"),r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(t)});if(!r.ok){const s=await r.json();throw new Error((s==null?void 0:s.error)||"Erro ao obter URL de upload.")}return await r.json()}async function d(o,t){if(!(await fetch(o,{method:"PUT",body:t,headers:{"Content-Type":t.type}})).ok)throw new Error("Erro ao enviar o arquivo para o S3.")}async function f(o,t){try{const e=a("NUXT_LAMBDA_FUNCTION_CREATE_TRANSCRIPTION"),r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(t)});if(!r.ok){const s=await r.json();throw new Error((s==null?void 0:s.error)||"Erro ao obter URL de upload.")}return await r.json()}catch(e){return{success:!1,data:null,error:e.message||"Erro desconhecido"}}}async function l(o){const t=a("NUXT_LAMBDA_FUNCTION_GET_TRANSCRIPTIONS"),e=await fetch(t,{headers:{Authorization:`Bearer ${o}`}});if(!e.ok){const n=await e.json();throw new Error((n==null?void 0:n.error)||"Erro ao obter transcrições.")}return await e.json()}const T=c("auth",{state:()=>({isLoggedIn:!1,user:null,token:null}),actions:{async login(o,t){try{const e=a("NUXT_LAMBDA_FUNCTION_SIGNIN"),r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:o,password:t})}),n=await r.json();if(!r.ok)throw new Error(n.error||"Error logging in");this.token=n.data.accessToken,this.isLoggedIn=!0,localStorage.setItem("auth_token",n.token)}catch(e){throw console.error("Login error:",e),e}},async signup(o,t,e,r){try{const n=a("NUXT_LAMBDA_FUNCTION_SIGNUP");return await(await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:o,password:t,firstName:e,lastName:r})})).json()}catch(n){throw console.error("Signup error:",n),n}},async confirmSignup(o,t){try{const r=i().public.NUXT_LAMBDA_FUNCTION_CONFIRM_SIGNUP;return await(await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:o,code:t})})).json()}catch(e){throw console.error("Confirm signup error:",e),e}},logout(){const o=u();this.isLoggedIn=!1,this.token=null,typeof window<"u"&&localStorage.removeItem("auth_token"),o.push("/")},checkSession(){if(typeof window<"u"){const o=localStorage.getItem("auth_token");if(o)return this.token=o,this.isLoggedIn=!0,!0;this.logout()}return!1}},getters:{isAuthenticated:o=>o.isLoggedIn,getUser:o=>o.user,getToken:o=>o.token}});export{g as a,d as b,f as c,l as g,T as u};
